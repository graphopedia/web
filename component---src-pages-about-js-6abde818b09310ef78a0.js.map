{"version":3,"sources":["webpack:///./src/components/Banner/icon-close.svg","webpack:///./src/pages/about.js","webpack:///./src/components/Footer/styles.module.css","webpack:///./src/components/Banner/styles.module.css","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Banner/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Layout/styles.module.css","webpack:///./src/pages/about/cover-encyclopedia-gallactica.jpg","webpack:///./src/pages/about.module.css"],"names":["React","IconClose","props","createElement","defaultProps","module","exports","default","AboutPage","Layout","Index","title","description","className","styles","cover","src","coverImage","Link","to","Footer","footer","menu","home","Date","getFullYear","href","Banner","_ref","id","message","cta","ctaLink","_ref$isOnTop","isOnTop","_useState","useState","closed","setClosed","Fragment","banner","bottomBanner","role","content","desktopMessage","mobileMessage","target","and","rel","ctaLinkText","ctaLinkCall","ctaLinkBtn","closeBtn","onClick","closedBanners","JSON","parse","localStorage","getItem","currTimestamp","getTime","lastClosed","setItem","stringify","CloseIcon","getDelayPeriodInMS","delay","_delay$split","split","delayValue","_delay$split$","delayPeriod","delayTime","Number","children","linksSlot","type","StaticQuery","query","render","data","banners","window","undefined","i","length","_banners$i","expiration","expirationTimestamp","now","delayMS","getCurrentBanner","allAnnouncementsYaml","nodes","globalWrapper","Helmet","site","siteMetadata","meta","name","lang","link","ontop","Header","siteTitle","pageFull","pageColumn"],"mappings":"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","file":"component---src-pages-about-js-6abde818b09310ef78a0.js","sourcesContent":["var React = require('react');\n\nfunction IconClose (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"m18.717 6.697-1.414-1.414-5.303 5.303-5.303-5.303-1.414 1.414 5.303 5.303-5.303 5.303 1.414 1.414 5.303-5.303 5.303 5.303 1.414-1.414-5.303-5.303z\"}));\n}\n\nIconClose.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = IconClose;\n\nIconClose.default = IconClose;\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/Layout/index'\nimport Index from \"../components/MetaTags/index\";\nimport styles from \"./about.module.css\"\nimport coverImage from \"./about/cover-encyclopedia-gallactica.jpg\";\n\nconst AboutPage = (props) => (\n  <Layout>\n    <Index\n      title={`About Graphopedia`}\n      description=\"Graphopedia contains the biggest collection of data visualizations and inforaphics. Read more about how it works.\"\n    />\n    <div className={styles.cover}><img src={coverImage} /></div>\n    <h1>About Graphopedia</h1>\n    <p>The Graphopedia is a compilation of chart, diagram, and visualization model types used in information graphics.\n      The list includes general-purpose visualization types. Each types is given a definition, its anatomy, examples, tools for creating the visualization, and the sources.\n    </p>\n    <p>Join <Link to=\"/about/dao\">our DAO</Link></p>\n    <h2>How to Find The Chart Your Are Looking For</h2>\n    <p>All charts are shown in alphabetical order. You can see them as a grid of icons or as a list with definitions. You can search for a chart type using the search functionality in the top left. If the chart type you are looking for is a variation of another chart, you will find it in the Variations section.</p>\n    <p>The more commonly used charts have their variations listed in the Variations section. Some types of variations apply across many types of charts, for example stacking (as in stacked area chart), grouping (as in grouped bar chart), and radial layout (as in radial tree). Other types of variations are unique to a specific chart type.</p>\n    <p>For many charts their alternative charts are listed in the Alternatives section. Alternative charts are those that can represent the same data structure. They may not be visually similar but they are the same in their function.</p>\n    <p>When it comes to choosing the right type of chart for an infographic, the possibilities are unlimited. The list here focuses on visualization types that have been described in scientific literature such that we know their advantages and disadvantages, and most importantly how readers interact with them.</p>\n    <p>Some chart types are popular in presentations and business but not researched by scientists. Such examples include the bullet chart, the waterfall chart, the pyramid diagram, and the funnel chart, among others. We still included them because they are widely used and often for their role as a metaphor rather than a statistical graphic.</p>\n    <p>The example section attempts to give a variety of high-quality examples, most of them coming from newspapers. We attempt to make every example stand on its own so that the reader can understand the underlying data and see how the visualization technique was applied to it.</p>\n   <p>While many of the listed charts are types of data visualization, meaning statistical graphs, many are pure information graphics techniques that include visual metaphor, illustrations, and diagrams. We use the term \"information graphics\" to include both data visualizations and infographics.</p>\n    <p>When listing sources, we attempt to link to the PDF version of the document that you can read where it is possible.</p>\n    <h2>Why We Created Infographopedia</h2>\n    <p>We are information designers who build infographic-making software Adioma. We have to know what chart and diagram types are out there and how people use them. We also need to see the best examples of them to keep up our quality of infographics and icons.</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default AboutPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles-module--footer--2Ymu3\",\"home\":\"styles-module--home--21ij8\",\"menu\":\"styles-module--menu--2GPDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"styles-module--banner--RoLzT\",\"bottomBanner\":\"styles-module--bottomBanner--3OqKJ\",\"message\":\"styles-module--message--2UMcL\",\"content\":\"styles-module--content--18A23\",\"cta\":\"styles-module--cta--c5pLy\",\"ctaLink\":\"styles-module--ctaLink--1Jfui\",\"ctaLinkBtn\":\"styles-module--ctaLinkBtn--2bJ8-\",\"ctaLinkCall\":\"styles-module--ctaLinkCall--3uEwk\",\"closeBtn\":\"styles-module--closeBtn--1mBtr\",\"mobileMessage\":\"styles-module--mobileMessage--3ifBO\",\"desktopMessage\":\"styles-module--desktopMessage--2mhmc\",\"ctaLinkText\":\"styles-module--ctaLinkText--3U5Yg\",\"header\":\"styles-module--header--2JGQR\"};","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './styles.module.css'\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <ul className={styles.menu}>\n      <li className={styles.home}><Link to=\"/\">Adioma © {new Date().getFullYear()}</Link></li>\n      <li><Link to=\"/about\">About</Link></li>\n      <li><a href=\"https://adioma.com\">Infographic Maker</a></li>\n      <li className=\"hidden-md\"><a href=\"https://adioma.com/icons\">Icons</a></li>\n      <li className=\"hidden-md\" ><a href=\"https://learn.adioma.com\">Infographic Course</a></li>\n      <li className=\"\"><a href=\"https://blog.adioma.com\">Blog</a></li>\n      <li className=\"hidden-md hidden-lg\"><a href=\"https://github.com/graphopedia-xyz/graphopedia\">Contribute</a></li>\n      <li><a href=\"https://adioma.com/terms\">Terms<span className=\"= hidden-md hidden-lg\"> Of Use</span></a></li>\n      <li><a href=\"https://adioma.com/privacy\">Privacy</a></li>\n    </ul>\n  </footer>\n)\n\nexport default Footer\n","import React, { useState } from \"react\";\nimport CloseIcon from \"./icon-close.svg\";\nimport styles from './styles.module.css'\n\nconst Banner = ({ id, message, cta, ctaLink, isOnTop=false }) => {\n  const [closed, setClosed] = useState(false);\n  const handleClick = () => {\n    setClosed(true);\n    const savedBanners = JSON.parse(localStorage.getItem(`closed_banners`));\n    const closedBanners = savedBanners || { closed:{} };\n    const currTimestamp = new Date().getTime();\n    closedBanners.lastClosed = currTimestamp;\n    closedBanners.closed[id] = true;\n    localStorage.setItem(`closed_banners`, JSON.stringify(closedBanners));\n  }\n  if (closed) {\n    return <></>\n  }\n  return (\n    <div className={`${styles.banner} ${!isOnTop && styles.bottomBanner}`} role=\"alert\">\n      <div className={styles.content}>\n        <div className={styles.message}>\n          <span className={styles.desktopMessage}>{message}</span>\n          <span className={styles.mobileMessage}>\n            <a className={styles.ctaLink} href={ctaLink} target=\"_blank\" and rel=\"noopener noreferrer\">\n              <span className={styles.ctaLinkText}>{message}</span> <span className={styles.ctaLinkCall}>{cta}</span>\n            </a>\n          </span>\n        </div>\n        <div className={styles.cta}>\n          <a className={styles.ctaLinkBtn} href={ctaLink} target=\"_blank\" and rel=\"noopener noreferrer\">{cta}</a>\n        </div>\n      </div>\n      <button className={styles.closeBtn} onClick={handleClick}><CloseIcon /></button>\n    </div>\n  );\n}\n\nexport default Banner\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'normalize.css'\nimport '../../styles/global.css'\nimport styles from './styles.module.css'\n\nimport Header from '../Header/index'\nimport Footer from \"../Footer\"\nimport Banner from \"../Banner\";\n\nconst Layout = ({ children, linksSlot, type }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        allAnnouncementsYaml {\n          nodes{\n            id\n            description\n            cta\n            link\n            ontop\n            delay\n            expiration\n          }\n        }\n      }\n    `}\n    render={data => {\n      const banner = getCurrentBanner(data.allAnnouncementsYaml.nodes);\n      return(\n        <div className={styles.globalWrapper}>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: 'description', content: 'My fav blog' },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <div className={styles.content}>\n            {banner &&\n              <Banner\n                id={banner.id}\n                message={banner.description}\n                cta={banner.cta}\n                ctaLink={banner.link}\n                isOnTop={banner.ontop}\n              />\n            }\n            <Header siteTitle={data.site.siteMetadata.title} linksSlot={linksSlot} />\n\n            <div className={type === \"full\" ? styles.pageFull : styles.pageColumn}>\n              {children}\n            </div>\n          </div>\n\n          <Footer />\n        </div>\n    )}}\n  />\n)\n\nfunction getCurrentBanner(banners) {\n  const closedBanners = (typeof window !== 'undefined') ? JSON.parse(localStorage.getItem(`closed_banners`)) : undefined;\n  for (let i = 0; i < banners.length; i++) {\n    const { id, delay, expiration } = banners[i];\n    if (!closedBanners?.closed[id]) {\n      // check if banner announcement hasn't expired\n      const expirationTimestamp = expiration && new Date(expiration).getTime();\n      const now = new Date().getTime();\n      if (expirationTimestamp && (now > expirationTimestamp) ) {\n        continue; // if expired, try next banner\n      }\n      //check if banner should be delayed\n      const {lastClosed} = closedBanners || {};\n      if (lastClosed && delay) {\n        const delayMS = getDelayPeriodInMS(delay);\n        const delayedTime = lastClosed + delayMS;\n        if (delayedTime > now) {\n          return; //reject the banner and don't show anything else\n        };\n      }\n      return banners[i]; // no expiration or delay, display curr. banner\n    }\n  }\n  return null; // no more banners left\n}\n\nconst getDelayPeriodInMS = (delay) => {\n  const [delayValue, delayPeriod=\"s\"] = delay.split(\" \");\n  const delayTime = Number(delayValue);\n  switch (delayPeriod) {\n    case \"s\": return delayTime * 1000;\n    case \"m\": return delayTime * 1000 * 60;\n    case \"h\": return delayTime * 1000 * 60 * 60;\n    case \"d\": return delayTime * 1000 * 60 * 60 * 24;\n    default: return delayTime * 1000;\n  }\n}\n\nexport default Layout\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageColumn\":\"styles-module--pageColumn--3uEXx\",\"pageFull\":\"styles-module--pageFull--2sBe3\",\"globalWrapper\":\"styles-module--globalWrapper--3Ul-Z\",\"content\":\"styles-module--content--RpADO\"};","module.exports = __webpack_public_path__ + \"static/cover-encyclopedia-gallactica-c87a2ba8df42b79df5b4ba4c89e6b47b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"about-module--cover--37vAp\"};"],"sourceRoot":""}