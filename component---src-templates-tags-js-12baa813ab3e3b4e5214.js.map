{"version":3,"sources":["webpack:///./node_modules/core-js/internals/is-array-iterator-method.js","webpack:///./node_modules/core-js/internals/function-bind-context.js","webpack:///./node_modules/core-js/internals/iterate.js","webpack:///./node_modules/core-js/internals/iterator-close.js","webpack:///./src/templates/tags.js","webpack:///./node_modules/core-js/internals/get-iterator-method.js","webpack:///./node_modules/core-js/internals/iterators.js","webpack:///./node_modules/core-js/internals/function-uncurry-this-clause.js","webpack:///./src/templates/tags.module.css","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./node_modules/core-js/modules/es.object.from-entries.js"],"names":["wellKnownSymbol","Iterators","ITERATOR","ArrayPrototype","Array","prototype","module","exports","it","undefined","uncurryThis","aCallable","NATIVE_BIND","bind","fn","that","apply","arguments","call","anObject","tryToString","isArrayIteratorMethod","lengthOfArrayLike","isPrototypeOf","getIterator","getIteratorMethod","iteratorClose","$TypeError","TypeError","Result","stopped","result","this","ResultPrototype","iterable","unboundFunction","options","iterator","iterFn","index","length","next","step","AS_ENTRIES","IS_RECORD","IS_ITERATOR","INTERRUPTED","stop","condition","callFn","value","done","error","getMethod","kind","innerResult","innerError","Dropdown","_ref","selectedOption","_ref$includeVariation","includeVariations","_useState","useState","isOpen","setIsOpen","React","createElement","className","styles","dropdownContainer","dropdownOpen","onClick","arrow","Fragment","backdrop","optionsList","map","option","key","selected","Link","to","_kebabCase","TagsPage","_ref2","_data$allVisualizatio","_data$allVisualizatio2","pageContext","location","data","showVariations","tagName","tagId","_camelCase","chartGroups","getPostsFromGraphQLGroup","_ref3","tagsYaml","description","link","allVisualizationTechniques","allVisualizationTechniquesYaml","edges","_ref4","node","allVisualizationTechniquesMap","Object","fromEntries","e","id","name","Layout","MetaTags","title","functions","HeadlinePanel","pathname","subHeadline","href","fList","group","groupName","fTitle","slugify","fCharts","charts","_ref5","slug","variationOf","variations","displayVariations","iconWrapper","ChartIcon","showStack","isVariation","classof","isNullOrUndefined","classofRaw","argument","usingIterator","iteratorMethod","capitalize","camelCase","createCompounder","word","toLowerCase","$","iterate","createProperty","target","stat","obj","k","v"],"mappings":"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","file":"component---src-templates-tags-js-12baa813ab3e3b4e5214.js","sourcesContent":["var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar $TypeError = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_RECORD = !!(options && options.IS_RECORD);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_RECORD) {\n    iterator = iterable.iterator;\n  } else if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = IS_RECORD ? iterable.next : iterator.next;\n  while (!(step = call(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n","var call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { Link, graphql } from \"gatsby\";\nimport {Layout, HeadlinePanel, MetaTags}  from '../components';\nimport { getPostsFromGraphQLGroup, slugify } from \"../utils\";\nimport ChartIcon from '../components/ChartIcon';\nimport styles from './tags.module.css';\nimport _ from 'lodash';\n\n\nconst Dropdown = ({ options, selectedOption, includeVariations=false }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleOutsideClick = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div className={styles.dropdownContainer}>\n      <div className={`${styles.selectedOption} ${isOpen ? styles.dropdownOpen : ''}`} onClick={() => setIsOpen(!isOpen)}>\n        {selectedOption} <span className={`${styles.arrow} ${isOpen ? 'up' : 'down'}`}>&#9660;</span>\n      </div>\n      {isOpen && (\n        <>\n          <div className={styles.backdrop} onClick={handleOutsideClick}></div>\n          <ul className={styles.optionsList}>\n            {options.map((option) => (selectedOption === option \n              ?\n                <li key={option} className={`${styles.option} ${styles.selected}`} onClick={() => setIsOpen(false)}>\n                  <span>{option}</span>\n                </li>\n              :\n                <Link to={\"/\" + _.kebabCase(option) + (includeVariations ? \"/all\" : \"\")}>\n                  <li key={option} className={`${styles.option}`} onClick={() => setIsOpen(false)}>\n                    <span>{option}</span>\n                  </li>\n                </Link>\n              ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nfunction TagsPage({pageContext, location, data}) {\n    const {showVariations, tagName} = pageContext;\n    const tagId = _.camelCase(tagName)+\"s\";\n    const chartGroups = getPostsFromGraphQLGroup(data, showVariations, tagId);\n    const {description, link} = data?.tagsYaml || {};\n    const tags = ['function', 'visualization technique', 'information type']; // tags to switch\n\n    const allVisualizationTechniques = data?.allVisualizationTechniquesYaml?.edges?.map( ({node}) => node );\n    // map array to id:name\n    var allVisualizationTechniquesMap = Object.fromEntries(\n      allVisualizationTechniques?.map(e => [e.id, e.name])\n    )\n  \n    // TODO: for charts that have variations show number of variations on hover\n    // const chartTitle = (showVariations, post) => !showVariations && (post.variations > 0)\n    //   ? post.title +\" (\" + post.variations + \" variations)\"\n    //   : post.title\n    return (\n        <Layout>\n            <MetaTags\n              title={`Chart Functions list - Graphopedia`}\n              description=\"See different function for each graph on Graphopedia.\"\n            />\n            <div className={styles.functions}>\n                <HeadlinePanel pathname={location.pathname} includeVariations={showVariations} />\n                <div className={styles.subHeadline}>\n                  by <Dropdown \n                        selectedOption={tagName} \n                        options={tags} \n                        includeVariations={showVariations} \n                      />\n                  </div>\n                <div className={styles.description}>{description} {link && <a href={link}> Read more.</a>}</div>\n                <ul className={styles.fList}>\n                {\n                  chartGroups.map(group => {\n                    const groupName = tagName === \"visualization technique\" ? allVisualizationTechniquesMap[group.name] : group.name;\n                    return (\n                        <li>\n                         {groupName && \n                          <h2 className={styles.fTitle}>\n                            <Link to={`/${_.kebabCase(tagName)}/${slugify(groupName)}`} >\n                              {groupName}\n                            </Link>\n                          </h2>\n                         }\n                          <ul className={styles.fCharts}>\n                            {\n                              group.charts.map( function({slug, title, variationOf, variations}) {\n                                const displayVariations = !showVariations && (variations > 0);\n                                return (\n                                  <li>\n                                    <Link to={\"/\" + slug} title={displayVariations ? `${title} (${variations} variations)` : title}>\n                                    <span className={styles.iconWrapper}>\n                                      <ChartIcon slug={slug} showStack={displayVariations} isVariation={variationOf}/>\n                                    </span>\n                                    </Link>\n                                  </li>\n                                )\n                              })\n                            }\n                          </ul>\n                        </li>\n                  )})\n                }\n                </ul>\n            </div>\n        </Layout>\n    )\n\n}\n\nexport default TagsPage;\n\n\nexport const pageQuery = graphql`\nquery AllTagsQuery($tagName: String!, $incFunction: Boolean!, $incVisPrinciple: Boolean!, $incAxis: Boolean!, $incInfo: Boolean!) {\n  tagsYaml(name: {eq: $tagName}) {\n    description,\n    link\n  }\n  functions: allMarkdownRemark(limit: 2000, sort: {order: ASC, fields: [fileAbsolutePath]}) @include(if: $incFunction) {\n    group(field: frontmatter___functions) {\n      fieldValue\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            variationOf\n          }\n        }\n      }\n    }\n  }\n  visualizationTechniques: allMarkdownRemark(limit: 2000, sort: {order: ASC, fields: [fileAbsolutePath]}) @include(if: $incVisPrinciple) {\n    group(field: frontmatter___visualizationTechniques___techniqueId) {\n      fieldValue\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            variationOf\n          }\n        }\n      }\n    }\n  }\n  informationTypes: allMarkdownRemark(limit: 2000, sort: {order: ASC, fields: [fileAbsolutePath]}) @include(if: $incInfo) {\n    group(field: frontmatter___visualizationTechniques___informationType) {\n      fieldValue\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            variationOf\n          }\n        }\n      }\n    }\n  }\n  axisDirections: allMarkdownRemark(limit: 2000, sort: {order: ASC, fields: [fileAbsolutePath]}) @include(if: $incAxis) {\n    group(field: frontmatter___visualizationTechniques___axisDirection) {\n      fieldValue\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n            variationOf\n          }\n        }\n      }\n    }\n  }\n  allVisualizationTechniquesYaml {\n    edges {\n      node {\n        id,\n        name\n      }\n    }\n  }\n}\n`\n","var classof = require('../internals/classof');\nvar getMethod = require('../internals/get-method');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)\n    || getMethod(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n","module.exports = {};\n","var classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"functions\":\"tags-module--functions--11-NB\",\"fList\":\"tags-module--fList--bB11N\",\"fTitle\":\"tags-module--fTitle--3o7qn\",\"fCharts\":\"tags-module--fCharts--1lO-r\",\"iconWrapper\":\"tags-module--iconWrapper--AixED\",\"subHeadline\":\"tags-module--subHeadline--1XUD8\",\"description\":\"tags-module--description--2scYD\",\"dropdownContainer\":\"tags-module--dropdownContainer--15PXP\",\"selectedOption\":\"tags-module--selectedOption--uQ5Ks\",\"arrow\":\"tags-module--arrow--1i6LA\",\"dropdownOpen\":\"tags-module--dropdownOpen--13omU\",\"optionsList\":\"tags-module--optionsList--3Y6_f\",\"option\":\"tags-module--option--1ECLp\",\"selected\":\"tags-module--selected--3YV9G\",\"backdrop\":\"tags-module--backdrop--1Npxa\"};","var call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw $TypeError(tryToString(argument) + ' is not iterable');\n};\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, { AS_ENTRIES: true });\n    return obj;\n  }\n});\n"],"sourceRoot":""}